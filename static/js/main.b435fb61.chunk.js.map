{"version":3,"sources":["Components/Header/Header.js","Components/hoc/Layout/Layout.js","Components/history.js","Components/widgets/FormField/FormField.js","Components/widgets/SearchBox/SearchBox.js","Components/Contacts/ContactList/ContactListItem.js","Components/Contacts/ContactList/ContactList.js","Components/Contacts/ContactCreate/ContactCreate.js","Components/widgets/Modal/Modal.js","Components/Contacts/ContactDelete/ContactDelete.js","Components/NotFound/NotFound.js","Components/App/App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","Layout","Components_Header_Header","children","createHistory","FormField","Object","assign","formData","config","value","id","onChange","e","change","event","blur","SearchBox","state","searchBox","element","label","labelText","type","placeholder","validation","required","valid","touched","errorMessage","searchTerm","onChangehandler","_ref","updatedElement","objectSpread","_this","target","setState","onsearch","onFormSubmit","preventDefault","_this2","this","onSubmit","widgets_FormField_FormField","React","Component","ContactListItem","item","name","phone","Link","to","concat","ContactList","contactList","searchItem","fetchContactList","contacts","JSON","parse","localStorage","getItem","toConsumableArray","renderContactList","length","class","map","index","key","ContactList_ContactListItem","includes","filterContactList","widgets_SearchBox_SearchBox","ContactCreate","setUniqueContactID","dataToSubmit","contactId","uuidv1","addDataToLocalStorage","data","finalDataToSubmit","push","setItem","stringify","contactData","defineProperty","keys","constructor","history","renderContactPreview","preview","control","previewData","toUpperCase","Fragment","renderMetaData","Modal","ReactDOM","createPortal","style","display","onClick","handleClose","stopPropagation","header","content","action","document","querySelector","ContactDelete","contact","handleDeleteContact","updatedContactList","filter","find","match","params","_this3","_this4","widgets_Modal_Modal","createContent","createActions","NotFound","App","HashRouter","hoc_Layout_Layout","Switch","Route","path","exact","component","render","Components_App_App"],"mappings":"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","file":"static/js/main.b435fb61.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.css';\r\n\r\nconst Header = (props)=>{\r\n\r\n    return(\r\n       <header className=\"header\">\r\n           <div className=\"header-content\">\r\n                <h1 className=\"text-center mt-5 font-weight-light\">Phone Directory</h1>\r\n            </div>\r\n       </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from '../../Header/Header';\r\nconst Layout = (props)=>{\r\n\r\n    return(\r\n        <div className=\"layout\">\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout;","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();","import React from 'react';\r\n\r\nconst FormField = (props)=>{\r\n\r\n    return(\r\n        <input {...props.formData.config} value={props.formData.value} className=\"form-control\" id={props.id}\r\n        onChange={(e)=> props.change({event:e, id:props.id, blur:false})} />\r\n    )\r\n}\r\n\r\nexport default FormField;\r\n\r\n// ","import React from 'react';\r\nimport FormField from '../FormField/FormField';\r\n\r\nclass SearchBox extends React.Component{\r\n\r\n    state={\r\n        formData:{\r\n                searchBox:{\r\n                    element:\"input\",\r\n                    label:false,\r\n                    labelText:'',\r\n                    value:'',\r\n                    config:{\r\n                        type:\"text\",\r\n                        placeholder:'Search Contacts',\r\n                    },\r\n                    validation:{\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false,\r\n                    errorMessage:''\r\n                }\r\n        },\r\n        searchTerm: ''\r\n    }\r\n\r\n    onChangehandler= ({event, id, blur})=>{\r\n\r\n        const updatedElement = {};\r\n        updatedElement[id]={...this.state.formData[id], value:event.target.value}\r\n        this.setState({formData: {...this.state.formData, ...updatedElement}, searchTerm:updatedElement[id].value}, ()=>{\r\n            this.props.onsearch(this.state.searchTerm)\r\n        })\r\n    }\r\n\r\n    onFormSubmit = (e)=>{\r\n        \r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <form onSubmit={(e)=>this.onFormSubmit(e)}>\r\n            <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\"><i className=\"fa fa-search\"></i></span>\r\n                </div>\r\n                <FormField formData={this.state.formData.searchBox} id=\"searchBox\"\r\n                    change = {(element)=> this.onChangehandler(element)}\r\n                />\r\n            </div>\r\n            </form> \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nconst ContactListItem = (props)=>{\r\n\r\n    return(\r\n        <div className=\"list-group-item\">\r\n                <div className=\"row\">\r\n                    <div className=\" col-md-3 my-1\">{props.item.name}</div>\r\n                    <div className=\" col-md-3 my-1\">{props.item.phone}</div>           \r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 offset-md-6 my-1\"><Link to={`delete/${props.item.id}`} className=\"btn btn-danger btn-sm badge-pill\">Delete <i className=\"fa fa-trash ml-2\"></i></Link></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport SearchBox from '../../widgets/SearchBox/SearchBox';\r\nimport ContactListItem from './ContactListItem';\r\nimport './ContactList.css';\r\n\r\nclass ContactList extends React.Component{\r\n\r\n    state={contactList:[], searchItem:''}\r\n\r\n    componentDidMount(){\r\n        this.fetchContactList();\r\n    }\r\n\r\n\r\n    fetchContactList = ()=>{\r\n        const contacts = JSON.parse(localStorage.getItem('contactList'));\r\n        if(contacts){\r\n            this.setState({contactList:[...this.state.contactList, ...contacts]})\r\n        }\r\n    }\r\n\r\n    renderContactList = ()=>{\r\n        if(this.state.contactList.length>0){\r\n            let list=[]\r\n            switch(this.state.searchItem){\r\n                case '': list = this.state.contactList.map((item, index)=>{\r\n                            return(\r\n                                <div key={index} className=\"list-group\">\r\n                                    <ContactListItem item={item} />\r\n                                </div>\r\n                            )\r\n                        });\r\n                        return list;\r\n\r\n                default:    list = this.state.contactList.map((item, index)=>{\r\n                               if(item.name.includes(this.state.searchItem)){\r\n                                return(\r\n                                    <div key={index} className=\"list-group\">\r\n                                        <ContactListItem item={item} />\r\n                                    </div>\r\n                                )\r\n                               }\r\n                            });\r\n                            return list;\r\n            }\r\n        }\r\n        else{\r\n            return <h5 class=\"text-light\"> No saved contacts found!! Please add new.</h5>\r\n        }\r\n\r\n    }\r\n\r\n    filterContactList= (searchItem)=>{\r\n        this.setState({searchItem:searchItem});\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"contactList\">\r\n                <div className=\"contactList-content\">\r\n                    <div className=\"pt-5\">\r\n                    <SearchBox onsearch={(searchItem)=> this.filterContactList(searchItem)}/>\r\n                    </div>\r\n\r\n                    <Link to=\"/create\" className=\"btn btn-primary mt-4\">\r\n                            Add Contact <i className=\"fa fa-plus ml-2\"></i>\r\n                    </Link>\r\n                    <div className=\"my-5\">{this.renderContactList()}</div>\r\n                    <div className=\"text-right\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactList;\r\n\r\n\r\n","import React from 'react';\r\nimport FormField from '../../widgets/FormField/FormField';\r\nimport uuidv1 from 'uuid/v1';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './ContactCreate.css';\r\nclass ContactCreate extends React.Component{\r\n\r\n    state={\r\n        formData:{\r\n                name:{\r\n                        element:\"input\",\r\n                        label:false,\r\n                        labelText:'',\r\n                        value:'',\r\n                        config:{\r\n                            type:\"text\",\r\n                            placeholder:'Enter Name',\r\n                        },\r\n                        validation:{\r\n                            required:true\r\n                        },\r\n                        valid:false,\r\n                        touched:false,\r\n                        errorMessage:''\r\n                },\r\n                phone:{\r\n                    element:\"input\",\r\n                    label:false,\r\n                    labelText:'',\r\n                    value:'',\r\n                    config:{\r\n                        type:\"text\",\r\n                        placeholder:'Enter Phone Number',\r\n                    },\r\n                    validation:{\r\n                        required:true\r\n                    },\r\n                    valid:false,\r\n                    touched:false,\r\n                    errorMessage:''\r\n                }\r\n        }\r\n    }\r\n\r\n    setUniqueContactID=(dataToSubmit)=>{\r\n        let contactId = uuidv1();\r\n        dataToSubmit = {...dataToSubmit, id:contactId}\r\n        return dataToSubmit;\r\n    }\r\n\r\n    addDataToLocalStorage=(dataToSubmit)=>{\r\n        let data=[];\r\n        if(localStorage.getItem('contactList')){\r\n            data = JSON.parse(localStorage.getItem('contactList'));\r\n            let finalDataToSubmit = this.setUniqueContactID(dataToSubmit);\r\n            data.push(finalDataToSubmit);\r\n            localStorage.setItem('contactList', JSON.stringify(data));\r\n        }\r\n        else{\r\n            dataToSubmit = {...dataToSubmit, id:uuidv1()}\r\n            data.push(dataToSubmit);\r\n            localStorage.setItem('contactList', JSON.stringify(data));\r\n        }\r\n    }\r\n\r\n    onChangehandler= ({event, id, blur})=>{\r\n        const updatedElement = {};\r\n        updatedElement[id]={...this.state.formData[id], value:event.target.value}\r\n        this.setState({formData: {...this.state.formData, ...updatedElement}})\r\n    }\r\n\r\n    onFormSubmit = (e)=>{\r\n        let contactData ={}\r\n        for(let key in this.state.formData){\r\n\r\n            if(this.state.formData[key].value!==''){\r\n                contactData = {...contactData, [key]: this.state.formData[key].value}\r\n            }\r\n        }\r\n\r\n        if(!(Object.keys(contactData).length === 0 && contactData.constructor === Object)){\r\n            this.addDataToLocalStorage(contactData);\r\n            this.props.history.push('/');\r\n        }\r\n        e.preventDefault();\r\n    }\r\n\r\n    renderContactPreview = ()=>{\r\n        const preview=[];\r\n        for(let control in this.state.formData){\r\n            let previewData = <div key={control}>\r\n                                <label className=\"text-light\">\r\n                                 {control.toUpperCase()} : {this.state.formData[control].value}\r\n                                </label>\r\n                            </div>\r\n            preview.push(previewData)\r\n        }\r\n        return preview;\r\n    }\r\n\r\n    renderMetaData(){\r\n        return(\r\n            <React.Fragment>\r\n                <Link to={'/'} className=\"btn btn-primary\"><i className=\"fa fa-arrow-left\"></i> Back</Link>\r\n                <h2 className=\"mb-4 mt-3 text-center text-white font-weight-light\">Add Subscriber</h2>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"create-contact-container my-5\">\r\n                {this.renderMetaData()}\r\n\r\n                <form onSubmit={(e)=>this.onFormSubmit(e)} className=\"mb-3 contact-form\">\r\n                    <div className=\"form-group\">\r\n                        <FormField formData={this.state.formData.name} id=\"name\"\r\n                            change = {(element)=> this.onChangehandler(element)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <FormField formData={this.state.formData.phone} id=\"phone\"\r\n                            change = {(element)=> this.onChangehandler(element)}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-success btn-block\">Add <i className=\"fa fa-paper-plane ml-2\"></i></button>\r\n                </form>\r\n\r\n                <div className=\"contact-preview mt-4\">\r\n                    <h4 className=\"text-light font-weight-light\">Subscriber to be added -</h4>\r\n                    {this.renderContactPreview()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactCreate;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass Modal extends React.Component{\r\n    \r\n\r\n    render(){\r\n        return (\r\n            ReactDOM.createPortal(\r\n                <div className=\"modal\" style={{display:\"block\"}}>\r\n                    <div className=\"modal-dialog\" onClick={this.props.handleClose}>\r\n                    <div className=\"modal-content\" onClick={(e)=> e.stopPropagation()}>\r\n                        <div className=\"modal-header\">\r\n                            <h4>{this.props.header}</h4>\r\n                        </div>\r\n                    <div className=\"modal-body\">\r\n                        {this.props.content}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {this.props.action}\r\n                    </div>\r\n                    </div>\r\n                    </div> \r\n                </div>\r\n            , document.querySelector(\"#modal\"))\r\n        )\r\n    }\r\n}\r\nexport default Modal;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Modal from '../../widgets/Modal/Modal';\r\n\r\nclass ContactDelete extends React.Component{\r\n\r\n    state={contact: {}, contactList:[]}\r\n\r\n    componentDidMount(){\r\n        const contactList = JSON.parse(localStorage.getItem('contactList'));\r\n        const contact = contactList.find((item)=>{\r\n            return item.id === this.props.match.params.id;\r\n\r\n        })\r\n        this.setState({contact:contact, contactList:[...this.state.contactList, ...contactList]});\r\n    }\r\n\r\n    handleDeleteContact = ()=>{\r\n        const updatedContactList = this.state.contactList.filter((item)=>{\r\n            return (\r\n                item.id !== this.state.contact.id\r\n            )\r\n        });\r\n\r\n        localStorage.setItem('contactList', JSON.stringify(updatedContactList));\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    createActions(){\r\n        return(\r\n            <React.Fragment>\r\n                <Link to=\"/\" className=\"btn btn-primary\">Cancel <i className=\"fa fa-close ml-2\"></i></Link>\r\n                <button className=\"btn btn-danger\" onClick={()=> this.handleDeleteContact()}>Delete <i className=\"fa fa-trash ml-2\"></i></button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    createContent(){\r\n        if(!this.state.contact){\r\n            return <div>Are you sure you want to delete this contact ?</div>\r\n        }\r\n        return <div>{`Are you sure you want to delete this contact : ${this.state.contact.name} ?`}</div>\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Modal header=\"Delete Contact\" content={this.createContent()} action={this.createActions()} handleClose = {()=> this.props.history.push('/')}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactDelete;","import React from 'react';\r\n\r\nconst NotFound = ()=>{\r\n    return(\r\n        <h2 class=\"text-light font-weight-light text-center mt-5\">404, this page doesn't exists!!</h2>\r\n    )\r\n}\r\nexport default NotFound;","import React from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport Layout from '../hoc/Layout/Layout';\r\nimport history from '../history';\r\nimport ContactList from '../Contacts/ContactList/ContactList';\r\nimport ContactCreate from '../Contacts/ContactCreate/ContactCreate';\r\nimport ContactDelete from '../Contacts/ContactDelete/ContactDelete';\r\nimport NotFound from '../NotFound/NotFound';\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <HashRouter>\r\n                    <Layout>\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={ContactList} />\r\n                            <Route path=\"/create\" exact component={ContactCreate} />\r\n                            <Route path=\"/delete/:id\" exact component={ContactDelete} />\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </Layout>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}